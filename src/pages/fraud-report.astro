---
import '../styles/main.css'
import PageLayout from '../layouts/PageLayout.astro'
import PageSection from '../components/PageSection.astro'

const frontmatter = {
  title: 'Report Fraud',
  description: 'Have you been scammed or hacked? Here is what to do!'
}
---

<PageLayout frontmatter={frontmatter} wide="true">
    <PageSection align="center">
        <p>Xahau is a public blockchain, with no governing party that can freeze or retrieve funds, close accounts, or otherwise keep people from their assets.</p>
        <div class="p-4 bg-green-50 border border-green-200 rounded-lg my-4">
            <strong>We can't reverse or cancel transactions, no-one can.</strong>
        </div>
        <p>We can flag accounts used for illicit activity, which will:</p>
        <ul class="list-disc list-outside">
            <li>Be included in our API that exchanges and other entities are using for AML compliance to monitor deposits, and possibly withhold illicit funds.</li>
            <li>Movement of funds will be auto-traced and we will receive notifications whenever they move, no matter how old the case is.</li>
            <li>In case of a scam, warn other users through wallet software and exchanges using our API, not to send funds to a flagged account.</li>
        </ul>
        
        <h3 class="mt-4">1. Submit the address to Xahau Forensics</h3>
        <p>We maintain the largest fraudulent address registry on Xahau and is used by several entities to combat illicit activity.</p>
        <h3 class="mt-4">2. Report your case to law enforcement</h3>
        <p>Report it to the local police and if your country has an online report form for cybercrime or financial crime, report it there as well.</p>
        <h3 class="mt-4">3. Follow up on your police report</h3>
        <p>We work with law enforcement. Let them know that we have the information – the odds are that we are also in contact with other victims and can help law enforcement combine cases across jurisdictions and provide actionable intelligence.</p>
        <h2 class="mt-4">What can you expect?</h2>
        <ul class="list-disc list-outside">
            <li>We can't reverse or cancel transactions, no-one can.</li>
            <li>We do our best to have funds seized when they leave Xahau, by working with exchanges and other off ramps – both through our fraudulent address registry API and by manually making contact.</li>
            <li>When you report an account to us, you can expect us to treat your report with as much attention than any other report.</li>
            <li>We get many reports every single day. If an account is added to our fraudulent address registry, we are taking the best care of it along with all other cases.</li>
            <li>If money is seized we will contact you (if you have left us a way to contact you).</li>
            <li>To reclaim funds you <strong>have</strong> to work with law enforcement for paperwork</li>
        </ul>
          <div class="p-4 bg-green-50 border border-green-200 rounded-lg my-4">
            <strong>We monitor hundreds of cases at the same time and can't hold hands on a case-by-case basis. We will only contact you if we have good news!</strong>
          </div>
    </PageSection>
  
  <main class="page-content flex-1 container mx-auto max-w-4xl p-6">
    <div class="bg-white rounded-lg shadow-lg p-8">
      <!-- Success message (hidden by default, shown via JS) -->
      <div id="success-message" class="mb-6 p-6 bg-green-50 border-2 border-green-500 text-green-800 rounded-lg hidden shadow-md">
        <div class="flex items-center mb-2">
          <svg class="w-6 h-6 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <p class="font-bold text-lg">Success!</p>
        </div>
        <p class="mb-2">Thank you for your report. It has been submitted successfully.</p>
        <p class="text-sm mt-3 font-semibold">Report ID: <code id="report-id" class="bg-green-200 px-3 py-1 rounded text-green-900"></code></p>
      </div>

      <!-- Error message (hidden by default, shown via JS) -->
      <div id="error-message" class="mb-6 p-6 bg-red-50 border-2 border-red-500 text-red-800 rounded-lg hidden shadow-md">
        <div class="flex items-center mb-2">
          <svg class="w-6 h-6 mr-2 text-red-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
          </svg>
          <p class="font-bold text-lg">Error</p>
        </div>
        <p id="error-text" class="whitespace-pre-wrap"></p>
      </div>

      <!-- Form container -->
      <div id="form-container">
        <form id="fraud-report-form" class="space-y-6">
          <div>
            <label for="address" class="block text-sm font-semibold text-gray-700 mb-2">
              Xahau Address <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="address"
              name="address"
              required
              placeholder="rXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-xahau-green focus:border-transparent transition-all"
            />
            <p class="text-sm text-gray-500 mt-1">Enter the Xahau address associated with the fraudulent activity</p>
          </div>

          <div>
            <label for="description" class="block text-sm font-semibold text-gray-700 mb-2">
              Description <span class="text-red-500">*</span>
            </label>
            <textarea
              id="description"
              name="description"
              required
              rows="6"
              placeholder="Describe the fraudulent activity"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-xahau-green focus:border-transparent transition-all"
            ></textarea>
            <p class="text-sm text-gray-500 mt-1">Provide as much detail as possible to help us investigate</p>
          </div>

          <div>
            <label for="url" class="block text-sm font-semibold text-gray-700 mb-2">
              URL <span class="text-gray-400 text-xs">(Optional)</span>
            </label>
            <input
              type="url"
              id="url"
              name="url"
              placeholder="Optional URL related to the fraud"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-xahau-green focus:border-transparent transition-all"
            />
            <p class="text-sm text-gray-500 mt-1">Provide a URL if relevant (e.g., scam website, social media post)</p>
          </div>

          <div>
            <label for="category_suggested" class="block text-sm font-semibold text-gray-700 mb-2">
              Suggested Category <span class="text-gray-400 text-xs">(Optional)</span>
            </label>
            <select
              id="category_suggested"
              name="category_suggested"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-xahau-green focus:border-transparent transition-all bg-white"
            >
              <option value="">Select a category...</option>
              <option value="giveaway">Giveaway</option>
              <option value="theft">Theft</option>
              <option value="other">Other</option>
            </select>
            <p class="text-sm text-gray-500 mt-1">Help us categorize the type of fraud</p>
          </div>

          <div>
            <label for="reporter_contact" class="block text-sm font-semibold text-gray-700 mb-2">
              Contact Information <span class="text-gray-400 text-xs">(Optional)</span>
            </label>
            <input
              type="text"
              id="reporter_contact"
              name="reporter_contact"
              placeholder="Optional contact information, for example e-mail, X handle or Telegram username"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-xahau-green focus:border-transparent transition-all"
            />
            <p class="text-sm text-gray-500 mt-1">Provide contact info if you're willing to help with follow-up questions</p>
          </div>

          <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
            <altcha-widget
              name="altcha"
              challengeurl="https://api.analytics.xahau.network/captcha/challenge"
              hidefooter="false"
              hidelogo="false"
            ></altcha-widget>
          </div>

          <div class="flex items-center justify-between pt-4">
            <p class="text-sm text-gray-600">
              <span class="text-red-500">*</span> Required fields
            </p>
            <button
              type="submit"
              class="px-8 py-3 bg-xahau-green-dark text-white font-semibold rounded-lg hover:bg-xahau-green transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-xahau-green focus:ring-offset-2"
            >
              Submit Report
            </button>
          </div>
        </form>

        <!-- Submit another report button (hidden by default) -->
        <div id="another-report-btn" class="mt-6 hidden">
          <button
            onclick="location.reload()"
            class="inline-block px-6 py-3 bg-xahau-green-dark text-white font-semibold rounded-lg hover:bg-xahau-green transition-all no-underline"
          >
            Submit Another Report
          </button>
        </div>
      </div>
    </div>

    <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6 pt-0">
      <h3 class="text-lg font-semibold text-blue-900 mb-3">Privacy & Security</h3>
      <ul class="space-y-2 text-sm text-blue-800">
        <li class="flex items-start">
          <svg class="w-5 h-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>This form uses ALTCHA, a privacy-compliant CAPTCHA that doesn't track you</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>Your report is submitted securely to the Xahau Forensics network</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>Reports are reviewed and used to improve network security</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>No personal information is required to submit a report</span>
        </li>
      </ul>
    </div>

    <div class="mt-6 text-center text-sm text-gray-600">
      <p>
        Xahau Forensics is run by <a href="https://inftf.org" class="text-xahau-green-dark underline hover:text-black">INFTF</a>.
      </p>
    </div>
  </main>

  <script is:inline type="module">
    // Import ALTCHA widget
    import 'https://cdn.jsdelivr.net/npm/altcha/dist/altcha.min.js';
    
    // Wait for the widget to be ready
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('fraud-report-form');
      const altchaWidget = document.querySelector('altcha-widget');
      const successMessage = document.getElementById('success-message');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      const reportIdEl = document.getElementById('report-id');
      const formContainer = document.getElementById('form-container');
      const anotherReportBtn = document.getElementById('another-report-btn');
      
      if (!form || !altchaWidget) {
        return;
      }
      
      // Listen for state changes on the ALTCHA widget
      let isVerified = false;
      
      altchaWidget.addEventListener('statechange', (event) => {
        isVerified = event.detail.state === 'verified';
      });
      
      // Handle form submission
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Hide previous messages
        errorMessage.classList.add('hidden');
        successMessage.classList.add('hidden');
        
        // Check verification state
        if (!isVerified) {
          errorText.textContent = 'Please complete the CAPTCHA verification before submitting.';
          errorMessage.classList.remove('hidden');
          
          // Scroll to top of the white card container
          const card = document.querySelector('.bg-white.rounded-lg.shadow-lg');
          if (card) {
            card.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
          return;
        }
        
        // Get ALTCHA payload - try multiple methods
        let altchaSolution = null;
        
        // Try getting from FormData first (if widget name attribute works)
        const formData = new FormData(form);
        altchaSolution = formData.get('altcha');
        
        // If not found, try getting directly from widget
        if (!altchaSolution) {
          // The widget stores the solution in a hidden input or as a property
          const hiddenInput = form.querySelector('input[name="altcha"]');
          if (hiddenInput) {
            altchaSolution = hiddenInput.value;
          }
        }
        
        // Try getting from data attribute
        if (!altchaSolution) {
          altchaSolution = altchaWidget.dataset.payload;
        }
        
        if (!altchaSolution) {
          errorText.textContent = 'CAPTCHA verification failed. Please complete the challenge and try again.';
          errorMessage.classList.remove('hidden');
          
          // Scroll to top of the white card container
          const card = document.querySelector('.bg-white.rounded-lg.shadow-lg');
          if (card) {
            card.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
          return;
        }
        
        const requestBody = {
          address: formData.get('address'),
          description: formData.get('description'),
          altcha_solution: altchaSolution
        };
        
        // Add optional fields
        if (formData.get('url')) requestBody.url = formData.get('url');
        if (formData.get('category_suggested')) requestBody.category_suggested = formData.get('category_suggested');
        if (formData.get('reporter_contact')) requestBody.reporter_contact = formData.get('reporter_contact');
        
        // Disable submit button and show loading state
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="flex items-center justify-center"><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Submitting...</span>';
        
        try {
          const response = await fetch('https://api.analytics.xahau.network/ufr', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestBody)
          });
          
          const result = await response.json();
          
          if (response.ok) {
            // Show success message
            reportIdEl.textContent = result.reportId || 'unknown';
            successMessage.classList.remove('hidden');
            errorMessage.classList.add('hidden');
            formContainer.style.display = 'none';
            anotherReportBtn.classList.remove('hidden');
            
            // Scroll to top of the white card container
            const card = document.querySelector('.bg-white.rounded-lg.shadow-lg');
            if (card) {
              card.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
          } else {
            // Show error message
            const errorMsg = Array.isArray(result.message) 
              ? result.message.join(', ') 
              : (result.message || 'Failed to submit report. Please try again.');
            errorText.textContent = errorMsg;
            errorMessage.classList.remove('hidden');
            successMessage.classList.add('hidden');
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalText;
            
            // Scroll to top of the white card container
            const card = document.querySelector('.bg-white.rounded-lg.shadow-lg');
            if (card) {
              card.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
          }
        } catch (error) {
          errorText.textContent = 'Network error: Unable to connect to the server. Please check your connection and try again.';
          errorMessage.classList.remove('hidden');
          successMessage.classList.add('hidden');
          submitBtn.disabled = false;
          submitBtn.innerHTML = originalText;
          
          // Scroll to top of the white card container
          const card = document.querySelector('.bg-white.rounded-lg.shadow-lg');
          if (card) {
            card.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        }
      });
    });
  </script>

  <style>
    altcha-widget {
      --altcha-primary-color: #007b3d;
      --altcha-background-color: #ffffff;
      --altcha-border-color: #e1e5e9;
      --altcha-text-color: #333333;
      --altcha-border-radius: 8px;
      --altcha-font-family: 'Onest', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }
  </style>
</PageLayout>

